{"version":3,"sources":["theme.js","app/modules/components/LinkWrapper/index.js","app/modules/components/Header/index.js","app/modules/services/CaseService/index.js","app/modules/components/PopUp/index.js","app/modules/routes/Case/index.js","app/modules/routes/Case/components/CaseComponent/index.js","app/modules/routes/Home/index.js","app/modules/routes/Home/components/HomeComponent/index.js","app/modules/routes/NotFound/index.js","app/modules/components/DataTable/index.js","app/modules/index.js","app/modules/routes/index.js","app/modules/routes/CaseList/index.js","app/modules/routes/CaseList/components/CaseListComponent/index.js","app/App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","LinkWrapper","props","activeStyle","fontWeight","Header","className","to","CaseService","findAll","fetch","then","res","treatError","json","findById","id","put","body","method","headers","post","console","log","ok","Error","responseText","PopUp","exibeMensagem","status","msg","M","toast","html","classes","displayLength","Case","routeProps","path","component","handleSubmit","e","preventDefault","state","case","tags","split","undefined","access","JSON","stringify","tratarResp","setState","catch","err","location","folder","client","title","responsible","description","comments","onChangeDefault","bind","this","value","currentTarget","type","checked","noValidate","ref","onSubmit","onError","errors","fullWidth","label","onChange","name","maxLength","validators","errorMessages","Component","Home","exact","NotFound","DataTable","key","columns","map","col","actions","length","data","item","filter","field","act","Button","variant","color","endIcon","Icon","icon","onClick","click","Routes","goToCase","fgoToCase","_embedded","val","selectedCaseId","push","pathname","App","modules","route","Boolean","window","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eeab27c3.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#556cd6',\r\n        },\r\n        secondary: {\r\n            main: '#19857b',\r\n        },\r\n        error: {\r\n            main: red.A400,\r\n        },\r\n        background: {\r\n            default: '#fff',\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst LinkWrapper = props =>{\r\n    return (\r\n        <NavLink activeStyle={{fontWeight: \"bold\"}} {...props}/>\r\n    );\r\n}\r\nexport default LinkWrapper;\r\n","import React from 'react';\r\nimport LinkWrapper from '../LinkWrapper';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper indigo lighten-2\">\r\n                <LinkWrapper to=\"/\" className=\"brand-logo\" activeStyle={{}}>Prova BRD</LinkWrapper>\r\n                <ul className=\"right\">\r\n                    <li><LinkWrapper to='/'>Home</LinkWrapper></li>\r\n                    <li><LinkWrapper to='/caselist'>Cases</LinkWrapper></li>\r\n                    <li><LinkWrapper to='/case'>New Case</LinkWrapper></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Header;\r\n","const CaseService = {\r\n\r\n    findAll: () => {\r\n        return fetch('rs/v1/case')\r\n        .then(res => CaseService.treatError(res))\r\n        .then(res => res.json());\r\n    },\r\n    findById: (id) => {\r\n        return fetch(`rs/v1/case/${id}`)\r\n        .then(res => CaseService.treatError(res))\r\n        .then(res => res.json());\r\n    },\r\n    put: (id, body) => {\r\n        return fetch(`rs/v1/case/${id}`, {\r\n             method: 'PUT',\r\n             headers: { 'Content-Type': 'application/json' },\r\n             body: body\r\n         })\r\n        .then(res => CaseService.treatError(res))\r\n        .then(res => res.json());\r\n    },\r\n    post: (body) => {\r\n        return fetch(`rs/v1/case`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: body\r\n        })\r\n        .then(res => CaseService.treatError(res))\r\n        .then(res => res.json());\r\n    },\r\n    treatError : res => {\r\n        console.log(res);\r\n        if(!res.ok) {\r\n            throw Error(res.responseText);\r\n        }\r\n        return res;\r\n    }\r\n\r\n}\r\nexport default CaseService;\r\n","import M from 'materialize-css';\r\n\r\nconst PopUp = {\r\n    exibeMensagem : (status, msg) =>{\r\n\r\n        if(status === \"success\"){\r\n            M.toast({html: msg, classes: 'green', displayLength: 2000});\r\n        }\r\n\r\n        if(status === 'error'){\r\n            M.toast({html: msg, classes: 'red', displayLength: 2000});\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default PopUp;\r\n","import React from 'react';\r\nimport CaseComponent from './components/CaseComponent';\r\n\r\nconst Case = {\r\n    routeProps: {\r\n        path: '/case',\r\n        component: CaseComponent\r\n    },\r\n    name: 'Case'\r\n}\r\n\r\n\r\nexport default Case;\r\n","import React, { Component, Fragment, createRef } from 'react';\r\nimport Header from '../../../../components/Header';\r\nimport CaseService from '../../../../services/CaseService';\r\nimport PopUp from '../../../../components/PopUp';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport {  Button, Card, Row, Col, RadioGroup, FormControlLabel, Radio } from 'react-materialize';\r\nimport { Box } from '@material-ui/core'\r\nclass CaseComponent extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                    case: {\r\n                        id: props.location.state && props.location.state.id !== 'new' ? props.location.state.id : 'new',\r\n                        folder: '',\r\n                        client: '',\r\n                        title: '',\r\n                        responsible: '',\r\n                        tags: '',\r\n                        description: '',\r\n                        comments: ''\r\n                    }\r\n                 };\r\n\r\n        this.onChangeDefault = this.onChangeDefault.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.tratarResp = this.tratarResp.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.case.id && this.state.case.id !== 'new') {\r\n            CaseService.findById(this.state.case.id)\r\n            .then( res => {\r\n                this.tratarResp(res);\r\n                this.setState({case: res});\r\n            })\r\n            .catch(err => {\r\n                PopUp.exibeMensagem('error', 'Communication error, try again later.')\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onChangeDefault(e){\r\n        var value;\r\n        if(e.currentTarget.type === 'checkbox'){\r\n            value = e.currentTarget.checked\r\n        } else {\r\n            value = e.currentTarget.value;\r\n        }\r\n\r\n        var state = this.state.case;\r\n        state[e.currentTarget.id] = value;\r\n        this.setState({case: state});\r\n    }\r\n    tratarResp(res) {\r\n        let tags = '';\r\n        if (res.tags) {\r\n            for (const tag of res.tags) {\r\n                tags += tag;\r\n            }\r\n            res.tags = tags;\r\n        }\r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let body = this.state.case;\r\n        console.log(body.tags);\r\n        if (body.tags) {\r\n            body.tags = body.tags.split(',');\r\n        } else {\r\n            body.tags = [];\r\n        }\r\n        if (this.state.case.id === 'new') {\r\n            body.id = undefined;\r\n            body.access = 'PUBLIC';\r\n            body = JSON.stringify(body);\r\n            console.log(body);\r\n            CaseService.post(body)\r\n            .then( res => {\r\n                this.tratarResp(res);\r\n                this.setState({case: res});\r\n                 PopUp.exibeMensagem('success', 'New case successfully submited.')\r\n            })\r\n            .catch(err => {\r\n                PopUp.exibeMensagem('error', 'Communication error, try again later.')\r\n            });\r\n        } else {\r\n            console.log(JSON.stringify(body));\r\n            CaseService.put(body.id, JSON.stringify(body))\r\n            .then( res => {\r\n                this.tratarResp(res);\r\n                this.setState({case: res});\r\n                PopUp.exibeMensagem('success', 'Case successfully submited.')\r\n            })\r\n            .catch(err => {\r\n                PopUp.exibeMensagem('error', 'Communication error, try again later.')\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment >\r\n                <Header />\r\n                   <div className=\"container mb-10 center\">\r\n                        <h1>Case {this.state.case.id} </h1>\r\n                   </div>\r\n                <div className=\"container mb-10 center\">\r\n                <Card >\r\n\r\n                 <ValidatorForm noValidate\r\n                      ref=\"form\"\r\n                      onSubmit={this.handleSubmit}\r\n                      onError={errors => console.log(errors)}>\r\n\r\n                            <Row >\r\n                            <Col className=\"s8\">\r\n                            <TextValidator\r\n                                  fullWidth\r\n                                  type=\"input\"\r\n                                  ref=\"folder\"\r\n                                  label=\"Folder\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"folder\"\r\n                                  id=\"folder\"\r\n                                  value={this.state.case.folder}\r\n                                  maxLength=\"40\"\r\n                              />\r\n                            </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                             <Col className=\"s8\">\r\n                              <TextValidator\r\n                                  fullWidth\r\n                                  type=\"input\"\r\n                                  ref=\"client\"\r\n                                  label=\"Client\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"client\"\r\n                                  id=\"client\"\r\n                                  value={this.state.case.client}\r\n                                  validators={['required']}\r\n                                  maxLength=\"250\"\r\n                                  errorMessages={['Client is required']}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                             <Col className=\"s8\">\r\n                              <TextValidator\r\n                                  fullWidth\r\n                                  type=\"input\"\r\n                                  ref=\"title\"\r\n                                  label=\"Title\"\r\n                                  id=\"title\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"title\"\r\n                                  value={this.state.case.title}\r\n                                  validators={['required']}\r\n                                  errorMessages={['Title is required']}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                             <Col className=\"s6\">\r\n                              <TextValidator\r\n                                 fullWidth\r\n                                 type=\"input\"\r\n                                  ref=\"responsible\"\r\n                                  label=\"Responsible\"\r\n                                  id=\"responsible\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"responsible\"\r\n                                  value={this.state.case.responsible}\r\n                                  validators={['required']}\r\n                                  errorMessages={['Responsible is required']}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                             <Col className=\"s6\">\r\n                              <TextValidator\r\n                                  fullWidth\r\n                                  type=\"input\"\r\n                                  ref=\"tags\"\r\n                                  id=\"tags\"\r\n                                  label=\"Tags\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"tags\"\r\n                                  value={this.state.case.tags}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                             <Col className=\"s6\">\r\n                              <TextValidator\r\n                                  fullWidth\r\n                                  type=\"input\"\r\n                                  id=\"description\"\r\n                                  ref=\"description\"\r\n                                  label=\"Description\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"description\"\r\n                                  value={this.state.case.description}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                             <Col className=\"s12\">\r\n                              <TextValidator\r\n                                 fullWidth\r\n                                  type=\"input\"\r\n                                  ref=\"comments\"\r\n                                  id=\"comments\"\r\n                                  label=\"Comments\"\r\n                                  onChange={this.onChangeDefault}\r\n                                  name=\"comments\"\r\n                                  value={this.state.case.comments}\r\n                              />\r\n                              </Col>\r\n                            </Row>\r\n                             <Row>\r\n                              { this.state.case.id && this.state.case.id !== 'new' ?\r\n                                  <Button type=\"submit\">Update</Button> :\r\n                                  <Button type=\"submit\">Create</Button>\r\n                              }\r\n                              </Row>\r\n                          </ValidatorForm>\r\n                </Card>\r\n            </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CaseComponent;\r\n","import React from 'react';\r\nimport HomeComponent from './components/HomeComponent';\r\n\r\n\r\nconst Home = {\r\n    routeProps: {\r\n        path: '/',\r\n        component: HomeComponent,\r\n        exact: true\r\n    },\r\n    name: 'Home'\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Header from '../../../../components/Header';\r\nimport './css/Home.css';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nclass HomeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header />\r\n                <div className=\"container mb-10\">\r\n                    <h1>Home</h1>\r\n\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default HomeComponent;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <div> Notfound </div>\r\n);\r\n\r\nconst NotFound = {\r\n    routeProps: {\r\n        component: NotFoundPage\r\n    },\r\n    name: 'Notfound'\r\n}\r\n\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass DataTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <table className='centered highlight'>\r\n                <thead>\r\n                    <tr key='title'>\r\n                        {this.props.columns.map(col =>\r\n                         <th key={col.title}> {col.title}</th>\r\n                        )}\r\n                        {this.props.actions && this.props.actions.length > 0 ? <th key='acoes'> Ações </th> : null}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.data && this.props.data.length > 0 ?\r\n                    this.props.data.map(item =>\r\n                            <tr  key={`${item.id}`}>\r\n                                {this.props.columns.filter( col => {return col.field}).map(col =>\r\n                                    <td key={`${item.id}${item[col.field]}`}> {item[col.field]} </td>\r\n                                )}\r\n\r\n                                {this.props.actions && this.props.actions.length > 0 ?\r\n                                    this.props.actions.map(act =>\r\n                                        <td key={`${item.id}${act.id}`}>\r\n                                            <div>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    endIcon={<Icon>{act.icon}</Icon>}\r\n                                                    onClick={e => act.click(item)}>\r\n                                                    {act.title}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </td>\r\n                                    )\r\n                                : null}\r\n\r\n                            </tr>)\r\n                     : null}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n}\r\nexport default DataTable;\r\n\r\n","import routes from './routes';\r\n\r\nconst Routes = routes;\r\nexport default {Routes};\r\n","import Case from './Case';\r\nimport Home from './Home';\r\nimport NotFound from './NotFound'\r\nimport CaseList from './CaseList'\r\n\r\nexport default [\r\n    Case,\r\n    CaseList,\r\n    Home,\r\n    NotFound\r\n];\r\n","import React from 'react';\r\nimport CaseListComponent from './components/CaseListComponent';\r\n\r\nconst CaseList = {\r\n    routeProps: {\r\n        path: '/caselist',\r\n        component: CaseListComponent,\r\n        exact: true\r\n    },\r\n    name: 'CaseList'\r\n}\r\n\r\n\r\nexport default CaseList;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Header from '../../../../components/Header';\r\nimport DataTable from '../../../../components/DataTable';\r\nimport CaseService from '../../../../services/CaseService';\r\nimport PopUp from '../../../../components/PopUp';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass CaseListComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToCase = this.goToCase.bind(this)\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    title: 'Folder',\r\n                    field: 'folder'\r\n                },\r\n                {\r\n                    title: 'Client',\r\n                    field: 'client',\r\n                },\r\n                {\r\n                    title: 'Title',\r\n                    field: 'title'\r\n                }\r\n            ],\r\n            actions:[\r\n                {\r\n                    title: 'Detalhe',\r\n                    icon: 'send',\r\n                    id: 'detalhe',\r\n                    click: this.goToCase\r\n                }\r\n            ],\r\n            data: [],\r\n            fgoToCase: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        CaseService.findAll()\r\n        .then( res => {\r\n            this.setState({data: res._embedded.case});\r\n        })\r\n        .catch(err => {\r\n            PopUp.exibeMensagem('error', 'Communication error, try again later.')\r\n        });\r\n\r\n    }\r\n\r\n    goToCase(val) {\r\n        let id =  val.id || 'new';\r\n        this.setState({fgoToCase: true, selectedCaseId: id});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.fgoToCase) {\r\n            return <Redirect push to={{pathname: '/case', state: {id: this.state.selectedCaseId}}}/>;\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header />\r\n                <div className=\"container mb-10\">\r\n                    <h1>Cases</h1>\r\n                    <DataTable data={this.state.data} columns={this.state.columns} actions={this.state.actions}/>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CaseListComponent;\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport 'materialize-css';\nimport modules from \"./modules\";\nimport Home from \"./modules/routes/Home\";\nimport NotFound from \"./modules/routes/NotFound\";\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Header from './modules/components/Header';\n\nfunction App() {\n\n    return (\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    {modules.Routes.map(route => (\n                        <Route {...route.routeProps} key={route.name}/>\n                    ))}\n                </Switch>\n            </BrowserRouter>\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <ThemeProvider theme={theme}>\n      <CssBaseline/>\n        <App />\n  </ThemeProvider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}